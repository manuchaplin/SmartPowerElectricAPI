// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartPowerElectricAPI.Models;

#nullable disable

namespace SmartPowerElectricAPI.Migrations
{
    [DbContext(typeof(SmartPowerElectricContext))]
    [Migration("20250221153042_NominaFactura")]
    partial class NominaFactura
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrdenTrabajador", b =>
                {
                    b.Property<int>("OrdensId")
                        .HasColumnType("int");

                    b.Property<int>("TrabajadoresId")
                        .HasColumnType("int");

                    b.HasKey("OrdensId", "TrabajadoresId");

                    b.HasIndex("TrabajadoresId");

                    b.ToTable("OrdenTrabajador");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<bool?>("EmailEnviado")
                        .HasColumnType("bit");

                    b.Property<bool?>("FacturaCompletada")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminado")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdOrden")
                        .HasColumnType("int");

                    b.Property<double>("MontoACobrar")
                        .HasColumnType("float");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdOrden");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Cantidad")
                        .HasColumnType("float");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminado")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdOrden")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoMaterial")
                        .HasColumnType("int");

                    b.Property<int?>("IdUnidadMedida")
                        .HasColumnType("int");

                    b.Property<double?>("Precio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdTipoMaterial");

                    b.HasIndex("IdUnidadMedida");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Nomina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anyo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinSemana")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTrabajador")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InicioSemana")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("NoSemana")
                        .HasColumnType("int");

                    b.Property<double?>("SalarioEstandar")
                        .HasColumnType("float");

                    b.Property<double?>("SalarioPlus")
                        .HasColumnType("float");

                    b.Property<double>("horasTrabajadas")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdTrabajador");

                    b.ToTable("Nomina");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Cobrado")
                        .HasColumnType("float");

                    b.Property<double?>("CosteManoObra")
                        .HasColumnType("float");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminado")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Ganancia")
                        .HasColumnType("float");

                    b.Property<double?>("HorasEstimadas")
                        .HasColumnType("float");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("int");

                    b.Property<int>("NumeroOrden")
                        .HasColumnType("int");

                    b.Property<bool?>("OrdenFinalizada")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdProyecto");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Finalizado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("horasEstimadas")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Proyecto");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.TipoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoMaterial");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Trabajador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CobroxHora")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enrutamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinContrato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioContrato")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeguridadSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trabajador");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.UnidadMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminado")
                        .HasColumnType("datetime2");

                    b.Property<string>("UMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnidadMedida");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Protegido")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("OrdenTrabajador", b =>
                {
                    b.HasOne("SmartPowerElectricAPI.Models.Orden", null)
                        .WithMany()
                        .HasForeignKey("OrdensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartPowerElectricAPI.Models.Trabajador", null)
                        .WithMany()
                        .HasForeignKey("TrabajadoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Factura", b =>
                {
                    b.HasOne("SmartPowerElectricAPI.Models.Orden", "Orden")
                        .WithMany("Facturas")
                        .HasForeignKey("IdOrden");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Material", b =>
                {
                    b.HasOne("SmartPowerElectricAPI.Models.Orden", "Orden")
                        .WithMany("Materials")
                        .HasForeignKey("IdOrden");

                    b.HasOne("SmartPowerElectricAPI.Models.TipoMaterial", "TipoMaterial")
                        .WithMany("Materials")
                        .HasForeignKey("IdTipoMaterial");

                    b.HasOne("SmartPowerElectricAPI.Models.UnidadMedida", "UnidadMedida")
                        .WithMany("Materials")
                        .HasForeignKey("IdUnidadMedida");

                    b.Navigation("Orden");

                    b.Navigation("TipoMaterial");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Nomina", b =>
                {
                    b.HasOne("SmartPowerElectricAPI.Models.Trabajador", "Trabajador")
                        .WithMany("Nominas")
                        .HasForeignKey("IdTrabajador");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Orden", b =>
                {
                    b.HasOne("SmartPowerElectricAPI.Models.Proyecto", "Proyecto")
                        .WithMany("Ordens")
                        .HasForeignKey("IdProyecto");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Proyecto", b =>
                {
                    b.HasOne("SmartPowerElectricAPI.Models.Cliente", "Cliente")
                        .WithMany("Proyectos")
                        .HasForeignKey("IdCliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Cliente", b =>
                {
                    b.Navigation("Proyectos");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Orden", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Proyecto", b =>
                {
                    b.Navigation("Ordens");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.TipoMaterial", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.Trabajador", b =>
                {
                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("SmartPowerElectricAPI.Models.UnidadMedida", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
